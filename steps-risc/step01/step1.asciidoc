:env-gitlab: yes

## Назначение
Данное руководство пошагово описывает основные принципы
создания программ на языке ассемблера и C для процессоров семейства NeuroMatrix.
Показывается как разработать программу, задействуя скалярный и векторный процессор.
Приводятся основные принципы оптимизации программ с учётом архитектуры процессора, структуры и состава окружающей
его периферии.

Руководство является практическим и состоит из 14 уроков. 
К каждый уроку прилагается исходные коды, которые можно собрать и запустить в режиме пошаговой отладки на имеющейся отладочной плате.
Поддерживаются следующие платы : МЦ121.01 МЦ51.03 MB77.07 MB127.05 ... 
Запуск примеров также можно осуществить с помощью эмулятора QEMU. 


## Требования и зависимости к ПО 

- Для сборки примеров должен быть  установлен [Neuro Matrix SDK]  (https://www.module.ru/products/5/neuromatrix-nmc-sdk);
- Для работы с платами должны быть установлены соответствующие Библиотеки Загрузки и обмена (БЗИО);
- Для конфигурирования сборочных скриптов должен быть установлен [CMAKE] (https://cmake.org/)
- Для сборки/запуска примеров используется утилита ''' make ''' 
  Под ОС Windows рекомендуется использовать [make v3.81](http://gnuwin32.sourceforge.net/packages/make.htm).

## Конфигурирование 


Уроки представлены в виде исходных кодов без сборочных скриптов
и для начала работы их необходимо сконфигурировать. 


Конфигурация скриптов для запуска на плате (например МЦ 121.01) осуществляется из корневой директории командой:
[source, bash]
----
cmake -B build -G "Unix Makefiles" -D BOARD=mc12101
----

Конфигурация скриптов для запуска на эмуляторе (QEMU) осуществляется командой из корневой директории командой:
[source, bash]
----
cmake -B build -G "Unix Makefiles" -D BOARD=qemu
----

В результате должна появиться папка ```build``` , внутри которой в соответствии урокам  будут сформированы каталоги со сборочными скриптами. 
Сборочные скрипты представлены в двух форматах : Makefile и batch/bash скриптов (для Windows/Linux соответственно).

## Сборка 
Сборка примера ( например для платы МЦ.12101):
[source, bash]
----
cd build 
cd step01
cd mc12101-nmpu1
make
----


в результате должно появиться два исполняемых файла ```test.abs``` для прямого запуска и ```testd.abs``` для пошаговой отладки средствами GDB

## Запуск
Запуск примера осуществляется командой:
----
make run
----

Запуск примера через gdb осуществляется командой 
----
make rund
----
Более подробно работа с dgb описана в уроке step01
include::./step01/step01.asciidoc[]




////

- make_emu6405  - эмулятор nm6405(1879ВМ4) и nm6406(1879ВМ5Я)
- make_mc5103   - плата МЦ 51.03 (1879ВМ5Я)
- make_mc7601   - плата МЦ 76.01 (К1879ХК1Я)
- make_mb7707   - плата МВ 77.07 (К1879ХБ1Я)
- make_mc12101   - плата МC 121.01 (1879ВЯ6Я) 

Для платы МC 121.01 доступны доп. конфигурации:  
- make_mc12101_nmpu1-gcc-cfg - ядро 1(int core) сборка nm-gcc + cfg-файл конфиграции
- make_mc12101_nmpu1-gcc-ld  - ядро 1(int core) сборка nm-gcc + lds-файл конфиграции  
- make_mc12101_nmpu1-legacy  - ядро 1(int core) сборка старым SDK 

cmake -B build -G "Unix Makefiles" -D BOARD=mc12101

, а также пошагово отладить на  состоит оз описания и исходного кода к уроки. 
В первом уроке будет описан процесс сборки и запуска как под плату , так и под эмулятор. 

////










