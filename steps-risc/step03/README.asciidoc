= Организация Циклов
Исходный текст примера, используемого в данном уроке, содержится в файле `step3.S` в каталоге: 
`\steps-risc\step03`.

 
Пример демонстрирует простейший метод организации цикла при заполнении массива данных возрастающими значениями.

*Файл “step3.S”*
[code.S]
----
include::step3.S[]
----


== Комментарии к Примеру
В примере массив `С` в цикле последовательно заполняется возрастающими значениями.
Цикл организован путем перехода на заданную метку при выполнении определенных условий (с помощью команд условного перехода). Команда 
`if > goto Loop;`
осуществляет переход на метку Loop, в случае если условие 
`>` (больше) выполнено (все сравнения осуществляются с нулём). Эта команда проверяет значение флагов, выставленных предшествующей операцией, в данном случае такой операцией является gr1-- (Для конкретного примера `gr1` является счетчиком цикла, в процессоре  нет специального регистра - счётчика циклов). Установка флагов происходит только при выполнении арифметическо-логической операции в правой части скалярной команды.
Подробнее об условиях перехода см. раздел 5.1.9.4 Набор условий перехода в документе NeuroMatrix NM6403 Описание Языка Ассемблера. 

