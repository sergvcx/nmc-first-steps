= 1.17 Урок 13: Работа с Макросами
Исходный текст примера, используемого в данном уроке, содержится в файле `step13.asm` в каталоге: `..\Tutorial\Step13`
Пример демонстрирует описание и подстановку макросов с параметрами, а также использование меток внутри тела макроса.
Функция `Copy` копирует содержимое одного буфера в другой. В теле функции вызывается макрос, описанный в том же файле и выполняющий непосредственное копирование.


*Файл “main.cpp”*
[code,cpp]
----
include::main.cpp[]
----

*Файл “step13.S”*
[code,asm]
----
include::step13.S[]
----


== Комментарии к Примеру
Функция Copy использует макрос `ААА`.
`AAA(ar0, ar1, 16);`
В качестве первого параметра передается массив А, второй параметр – массив В, третий – число 16.
До использования макроса следует описать тело макроса, описание, как правило, располагают между секциями. 

`macro AAA (Arg1, Arg2, Arg3)`
`…`
`end  AAA;`
Описание тела макроса начинается с ключевого слова 
`macro`
 затем следует имя макроса, далее в круглых скобках задаются параметры.
 Заканчивается описание закрывающей скобкой 
`end`
 после которой указано имя макроса.
При подстановке макроса в тело программы формальные параметры заменяются фактическими значениями. 
Невозможно в качестве параметра передать фрагмент программного кода, так как при использовании макроса не осуществляется текстуальная подстановка. Макрос подставляется в программу как законченный фрагмент кода.
 Подробнее об использовании макросов см. в приложении A.2.Использование Макросов в Языке Ассемблера.
Если внутри тела макроса требуется использовать метку, то при ее объявлении требуется указать ключевое слово own.
`own Loop: label;`
В этом случае при подстановке макроса ассемблер заменит имя метки уникальным. Таким образом, в программе макрос с внутренней меткой можно вызывать более одного раза, при этом ассемблер не выдаст ошибку в связи с повторным определением метки с одним и тем же именем. 

В случае если требуется использовать макрос, описанный в библиотеке макросов, необходимо в программе указать перед подстановкой 
`import from M.mlb;`
где `M.mlb` – библиотека макросов, в которой находится необходимый макрос.

== Компиляция Примера 
Для компиляции примера необходимо в командной строке ввести команду: 
`nmcc -g -m Step13.asm main.cpp –oStep13.abs`


