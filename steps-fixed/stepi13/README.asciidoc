= Работа с Макросами
Исходный текст примера, используемого в данном уроке, содержится в файле `step13.S` в каталоге: `steps-fixed/stepi013`
Пример демонстрирует описание и подстановку макросов с параметрами, а также использование меток внутри тела макроса.
Функция `Copy` копирует содержимое одного буфера в другой. В теле функции вызывается макрос, описанный в том же файле и выполняющий непосредственное копирование.


*Файл “main.cpp”*
[code,cpp]
----
include::main.cpp[]
----

*Файл “step13.S”*
[code.S]
----
include::step13.S[]
----


== Комментарии к Примеру
Функция Copy использует макрос `ААА`.
`AAA ar0, ar1, 16`
В качестве первого параметра передается массив А, второй параметр – массив В, третий – число 16.
До использования макроса следует описать тело макроса, описание, как правило, располагают между секциями. 
```
.macro AAA Arg1, Arg2, Arg3
  ...
.endm
```
Описание тела макроса начинается с ключевого слова 
`.macro`
 затем следует имя макроса, далее через запятую перечисляются параметры.  
`.endm`

При подстановке макроса в тело программы формальные параметры заменяются фактическими значениями. 
Невозможно в качестве параметра передать фрагмент программного кода, так как при использовании макроса не осуществляется текстуальная подстановка. Макрос подставляется в программу как законченный фрагмент кода.
 Подробнее об использовании макросов см. в приложении A.2.Использование Макросов в Языке Ассемблера.
Если внутри тела макроса требуется использовать метку, то при ее объявлении требуется добавить суффикс `\@` . Вхождение этого суффикса в макросе выполняет роль счетчика и соответственно дополняет имя метки числовым кодом:
`Loop\@:`
В этом случае при подстановке макроса ассемблер заменит имя метки уникальным. Таким образом, в программе макрос с внутренней меткой можно вызывать более одного раза, при этом ассемблер не выдаст ошибку в связи с повторным определением метки с одним и тем же именем. 

В случае если требуется использовать макрос, описанный в отдельном файле, необходимо включить этот файл директивой `#include`, например : `#include "macros.hs"`


