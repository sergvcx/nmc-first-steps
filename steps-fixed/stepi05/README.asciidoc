= Арифметические Операции на Векторном АЛУ
Исходный текст примера, используемого в данном уроке, содержится в файле `step5.S` в каталоге: `steps-fixed/stepi05`.
Пример демонстрирует выполнение арифметических операций над массивом векторов с помощью векторного АЛУ процессора NM6403. Массив из 256-ти 32-х разрядных элементов заполняется возрастающими значениями.

*Файл “step5.S”*
[code.S]
----
include::step5.S[]
----


== Комментарии к Примеру
Программа состоит из двух частей, выполняющих аналогичные действия по заполнению массива `А` набором возрастающих значений. В первой части заполняются первые 64 элемента данных (каждый из которых является 32-х разрядным числом), а во второй части на базе результата, полученного в первой, происходит заполнение оставшейся части массива.
Программа выполняется на векторном процессоре и использует операцию суммирования на векторном АЛУ.
Инструкция 
`rep 1 ram = [ar4];`
помещает в `ram` 64-х разрядный вектор `0x0000000200000002`. Этот вектор будет использоваться для инкрементации значений заполнения массива. 
В результате выполнения инструкции 
`rep 1 data = [ar0] with data;`
в `afifo` попадёт число `0x0000000100000000`, с которого начинается заполнение массива. 
Далее в цикле происходит заполнение массива. После команды перехода выполняются две отложенные инструкции
```
rep 1 [ar1++] = afifo with afifo + ram;
nul;
```
Старое значение `afifo` сохраняется во внешней памяти, и одновременно с этим к нему прибавляется инкремент - вектор, расположенный в `ram`. Результат операции снова помещается в `afifo`. Таким образом, в массиве заполняются 64 значения (по два в каждом цикле). 
Команда 
`rep 1 [ar1++] = afifo;`
заполняет 62-й и 63-й элементы массива данными из afifo.
После того, как первые 64 элемента массива заполнены, они используются для заполнения остальной части массива. Для этого в `ram` заносится дублированное 32 раза число `0x0000004000000040`. Оно служит инкрементом для модификации заполнителей во втором цикле. Принцип работы процессора в обоих циклах одинаков, разница только в том, что во втором случае одна процессорная инструкция задаёт заполнение сразу 32 векторов данных.

