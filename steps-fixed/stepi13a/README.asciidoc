= 1.18 Урок 13а: Создание Библиотеки Макросов
Исходный текст примера, используемого в данном уроке, содержится в файле `step13а.asm` в каталоге: `..\Tutorial\Step13а`
На примере предыдущего урока демонстрируются возможности использования макросов, описанных в макробиблиотеках, способы создания библиотек. Кроме того, в одном из макросов описаны возможности условной компиляции. 



*Файл “macros.h”*
[code,asm]
----
include::include/macros.h[]
----

== Комментарии к Примеру
В макросе `Push_Pop` используются возможности условной компиляции. Если в качестве фактического параметра передается ноль, то регистровые пары сохраняются в стеке; если же передана единица, то происходит восстановление регистровых пар из стека. На этапе компиляции в каждом отдельном случае будет подставлен тот или иной фрагмент программного кода.
Блоки условной компиляции формируются с помощью директивы `.if`. Подробнее см. раздел 2.7.5 Директива .if. документа NeuroMatrix NM6403. Описание Языка Ассемблера. 
Создание библиотеки макросов
Для создания библиотеки, содержащей описания макросов `AAA` и `Push_Pop` в командной строке требуется ввести сначала:
`asm -mmacros.mlb macros1.asm`
Таким образом, создается библиотека `macros.mlb`, содержащая макрос `ААА`.
Для добавления в макробиблиотеку макроса `Push_Pop` в командной строке используется следующий вызов:
`asm -mmacros.mlb -a macros2.asm`
Более подробное описание макросов и примеров работы с ними приведено в приложении A.2.Использование Макросов в Языке Ассемблера.
После того, как сформирована макробиблиотека, можно осуществлять подстановку макросов в программу.


[code,cpp]
----
include::include/main.cpp[]
----

[code,asm]
----
include::step13a.S[]
----

Компиляция Примера 
Для компиляции примера необходимо в командной строке ввести команду: 
`nmcc -g -m Step15a.asm main.cpp –I..\Include -oStep15a.abs`
где `Include` – каталог, в котором содержатся необходимые макробиблиотеки.

