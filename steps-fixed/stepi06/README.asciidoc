= 1.8 Урок 6: Операция Взвешенного Суммирования
Исходный текст примера, используемого в данном уроке, содержится в файле `step6.asm` в каталоге: `..\Tutorial\Step6`.
Демонстрируется пример использования устройства умножения, теневой и рабочей матрицы, входящих в состав векторного процессора NeuroMatrix. В примере рассмотрено использование операции взвешенного суммирования для перестановки байтов внутри 64-х разрядного вектора данных.

*Файл “step6.S”*
[code,asm]
----
include::step6.S[]
----

== Комментарии к Примеру
Задачей данного примера является перестановка порядка элементов в 64-разрядном векторе из состояния `A = 8877665544332211hl` в состояние `В = 1122334455667788hl`. Эта перестановка выполняется на устройстве умножения векторного процессора при помощи операции взвешенного суммирования. Основная идея этого преобразования поясняется на рисунке <<fig-multiplier>>:

[#fig-multiplier]
.Перестановка Элементов Вектора на Матричном Умножителе
image::multiplier.png[image,width=608,height=479]

Для выполнения операции взвешенного суммирования необходимо заполнить матрицу весовых коэффициентов значениями. Но прежде требуется разбить матрицу на строки и столбцы.
Команда `nb1 = 80808080h`; разбивает матрицу на 8 столбцов. При этом в обе части регистра попадают одинаковые константы. Таким образом, в `nb1` содержится константа `8080808080808080hl`. Регистр `nb1` является 64-разрядным регистром. Он отвечает за разбиение теневой матрицы на столбцы. 
Команда `sb = 03030303h`; разбивает матрицу на 8 строк. При этом в обе части регистра попадают одинаковые константы. Таким образом, в `sb` (64 разряда) содержится константа `0303030303030303hl`.  
Команда `rep 8 wfifo = [ar1++]`; осуществляет загрузку весовых коэффициентов из памяти в регистр-контейнер `wfifo`. Загрузку можно осуществлять и по частям, но так, чтобы не произошло переполнения. Контейнер `wfifo` имеет глубину в тридцать два 64-х разрядных слова.
Команда `ftw`;  выполняет перекодировку весовых коэффициентов, расположенных в `wfifo`, в специальный вид, в котором они хранятся в теневой матрице. Эта операция всегда выполняется за 32 такта, однако, она может выполняться параллельно с другими векторными инструкциями.
Команда `wtw`; копирует весовые коэффициенты из теневой матрицы в рабочую.
Инструкция
``rep 1 data = [ar2] with vsum , data, 0;` `
выполняет взвешенное суммирование с коэффициентами, которые прежде были загружены в рабочую матрицу. Вычисление производится по схеме приведённой на рисунке <<fig-multiplier>>. Результат операции попадает в регистр-контейнер afifo.
Инструкция 
``rep 1 [ar4] = afifo;`  `
выгружает результат из afifo во внешнюю память.

== Компиляция Примера 
Для компиляции примера `step6.asm` необходимо в командной строке ввести команду: 
`nmcc -g step6.asm libc.lib -m`


